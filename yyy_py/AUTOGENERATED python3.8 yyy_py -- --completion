# python3.8 yyy.py -- --completion

# in .bashrc
# source '/usr/local/software/yyy_py/AUTOGENERATED python3.8 -m yyy_py -- --completion.sh'
# alias yyy_py="python3.8 -m yyy_py"



# python3.8 -m yyy_py -- --completion
# und danach search and replace
# __main__py mit yyy_py
# und
# __main__.py mit yyy_py



# bash completion support for yyy_py
# DO NOT EDIT.
# This script is autogenerated by fire/completion.py.

_complete-yyy_py()
{
  local cur prev opts lastcommand
  COMPREPLY=()
  prev="${COMP_WORDS[COMP_CWORD-1]}"
  cur="${COMP_WORDS[COMP_CWORD]}"
  lastcommand=$(get_lastcommand)

  opts=""
  GLOBAL_OPTIONS=""


  case "${lastcommand}" in
  
    youtube-dl-sync-archive)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--f1-name --f2-name ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    bash-history-unique)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--x --x-kopie ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    doppelt-mit-md5)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--rm ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    yyy_py)
      
      opts="Fire bash-history-unique bytes-md5-in-pdf-einbetten djvu-nur-neu-hinzugekommene doppelt-mit-md5 pdf-nur-neu-hinzugekommene umbenennen umbenennen-mit-internet youtube-dl-subtitel youtube-dl-sync-archive ${GLOBAL_OPTIONS}" 
      opts=$(filter_options $opts)
    ;;

    youtube-dl-subtitel)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--extra-parameter-und-url ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;

    Fire)
      
      if is_prev_global; then
        opts="${GLOBAL_OPTIONS}"
      else
        opts="--command --component --name ${GLOBAL_OPTIONS}"
      fi
      opts=$(filter_options $opts)
    ;;
  esac

  COMPREPLY=( $(compgen -W "${opts}" -- ${cur}) )
  return 0
}

get_lastcommand()
{
  local lastcommand i

  lastcommand=
  for ((i=0; i < ${#COMP_WORDS[@]}; ++i)); do
    if [[ ${COMP_WORDS[i]} != -* ]] && [[ -n ${COMP_WORDS[i]} ]] && [[
      ${COMP_WORDS[i]} != $cur ]]; then
      lastcommand=${COMP_WORDS[i]}
    fi
  done

  echo $lastcommand
}

filter_options()
{
  local opts
  opts=""
  for opt in "$@"
  do
    if ! option_already_entered $opt; then
      opts="$opts $opt"
    fi
  done

  echo $opts
}

option_already_entered()
{
  local opt
  for opt in ${COMP_WORDS[@]:0:COMP_CWORD}
  do
    if [ $1 == $opt ]; then
      return 0
    fi
  done
  return 1
}

is_prev_global()
{
  local opt
  for opt in $GLOBAL_OPTIONS
  do
    if [ $opt == $prev ]; then
      return 0
    fi
  done
  return 1
}

complete -F _complete-yyy_py yyy_py

